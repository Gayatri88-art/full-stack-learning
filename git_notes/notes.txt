git status -->>The git status command is used to show the current status of your local Git repository

//add - adds new or changed files in your working directory to the git staging area
git add file_name

//commit - it is the record odf change
git commit -m "some meggage"

//push - uplod local repo content to remote repo
git push origin main

ls -la ==>> use to see hidden files
if .git is not available then we use following steps

 git init ==> used to create new git repo
now check .git is available or not by(ls -la)
yes it is available
this has to be done after creating a repo usi repo ki link niche ke command  me daal dena

git remote add origin <link>
git remote -v
git branch
git branch -M main
git push origin main

//branch commands
git branch (to check branch)
git branch -M main (to rename branch as main)
git checkout  branch_name 
git checkout -b <new_branch_name> (to create new branch)
git branch -d <branch_name> (to delete branch)


//marging code
git diff branch_name (to compair commit branches,file and more)
git merge file_name (to merg 2 files)
create a PR (PR = pull requet)


1Ô∏è‚É£ Pulling the Latest Changes (git pull)
When working with a team, you need to update your local repo with the latest changes from GitHub.

git pull origin main
This fetches and merges the latest changes from the remote main branch into your local branch.

2Ô∏è‚É£ Handling Merge Conflicts
A merge conflict happens when two people edit the same part of a file.

üîπ Steps to Fix a Merge Conflict:
Pull the latest changes:

git pull origin main
If there‚Äôs a conflict, Git will show:

CONFLICT (content): Merge conflict in <file>
Open the conflicting file and look for:

markdown

<<<<<<< HEAD
(Your changes)
=======
(Other changes from GitHub)
>>>>>>> main
Manually edit the file to keep the correct changes.
Remove <<<<<<<, =======, and >>>>>>>.
Mark the conflict as resolved:

git add <file>
git commit -m "Fixed merge conflict"
Push the resolved changes:

git push origin main
3Ô∏è‚É£ Fixing Mistakes
Undo the Last Commit (Before Pushing)

git reset --soft HEAD~1
This removes the last commit but keeps your changes. Now, you can fix things and re-commit.

Undo a Committed File

git checkout HEAD~1 <filename>
This restores a file to how it was before the last commit.

Revert a Pushed Commit

git revert <commit-hash>
git push origin main
This creates a new commit that undoes the bad commit.

4Ô∏è‚É£ What is Forking?
Forking is when you copy someone else's GitHub repository to your own GitHub account.

You can make changes independently without affecting the original repo.
If you want your changes added to the original repo, you send a Pull Request (PR).
üîπ How to Fork and Work on a Project:
Fork a repo from GitHub (Click the "Fork" button on the top right).
Clone it to your local machine:

git clone https://github.com/your-username/repo-name.git
Make changes and push them:

git add .
git commit -m "Your changes"
git push origin main
Create a Pull Request (PR) from your GitHub repo to the original repo.




 



